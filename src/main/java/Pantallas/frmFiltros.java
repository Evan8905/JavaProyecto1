/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pantallas;

import Clases.Album;
import Clases.Artista;

import Logica.Utilitario;
import javax.swing.table.DefaultTableModel;


public class frmFiltros extends javax.swing.JFrame {
 
    // Agregar ComboBox para cada columna
  
    /**
     * Creates new form frmFiltros
     */
    
    public frmFiltros(frmPrincipal aThis, boolean par) {
        initComponents();
        
        //Linea para que no se salga
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
   
        DefaultTableModel modeloTabla = new DefaultTableModel();
//////////////////////////////////////////////////////Tabla/////////////////////////////////////////////
        //*(Agregar las columnas al modelo de tabla
        modeloTabla.addColumn("Web");//En realidad tiene que ser el nombre de la cancion
        modeloTabla.addColumn("Genero");
        modeloTabla.addColumn("Artista");
        modeloTabla.addColumn("Origen");//Originalmente tiene que ser Duracion
        // Recorrer la lista de artistas y agregar cada artista a una fila en el modelo de tabla
        for (Artista artista : Utilitario.listaArtistas) {
            Object[] fila = new Object[4];
            fila[0] = artista.getWeb();
            fila[1] = artista.getGeneros();
            fila[2] = artista.getNombre();
           fila[3] = artista.getOrigen();//Originalmente tiene que ser Duracion
            modeloTabla.addRow(fila);
        }
        // Establecer el modelo de tabla en la jTableBusqueda
         jTableBusqueda.setModel(modeloTabla);
         
/////////////////////////LLenar combobox/////////////////////////////////////////////////////////////////////////
    for (Artista artista : Utilitario.listaArtistas) {
     cmbArtistas.addItem(artista.getNombre());
     cmbAlbum.addItem(artista.getWeb());
     //  agregar los géneros al combo box cmbGenero
    for (String genero : artista.getGeneros()) {
        cmbGenero.addItem(genero);
    }
   /////////////////////////LLenar combobox/////////////////////////////////////////////////////////////////////////
   
 }

         
    
    
    
    
    
    // Agregar ActionListener al cmbArtistas
    cmbArtistas.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbArtistasActionPerformed(evt);
        }
    });

    // Agregar ActionListener al cmbAlbum
    cmbAlbum.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbAlbumActionPerformed(evt);
        }
    });

    // Agregar ActionListener al cmbGenero
    cmbGenero.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cmbGeneroActionPerformed(evt);
        }
    });
    }
    

    
    
    
    
    
    
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        utilitario1 = new Logica.Utilitario();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnOrdenar = new javax.swing.JButton();
        cmbArtistas = new javax.swing.JComboBox<>();
        cmbAlbum = new javax.swing.JComboBox<>();
        cmbGenero = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnOrdenar1 = new javax.swing.JButton();
        btnOrdenar2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBusqueda = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 843, Short.MAX_VALUE)
        );

        btnOrdenar.setText("^");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        cmbArtistas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Artistas" }));
        cmbArtistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbArtistasActionPerformed(evt);
            }
        });

        cmbAlbum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Album" }));
        cmbAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAlbumActionPerformed(evt);
            }
        });

        cmbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Genero" }));
        cmbGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGeneroActionPerformed(evt);
            }
        });

        jLabel1.setText("Mantenimiento Canciones");

        btnOrdenar1.setText("^");
        btnOrdenar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenar1ActionPerformed(evt);
            }
        });

        btnOrdenar2.setText("^");
        btnOrdenar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenar2ActionPerformed(evt);
            }
        });

        jTableBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Numero", "Canción", "Artista", "Duración"
            }
        ));
        jScrollPane1.setViewportView(jTableBusqueda);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(cmbArtistas, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169)
                        .addComponent(cmbAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(494, 494, 494))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(btnOrdenar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOrdenar1)
                .addGap(253, 253, 253)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnOrdenar2)
                        .addGap(93, 93, 93)))
                .addGap(121, 121, 121))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbArtistas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrdenar2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnOrdenar)
                        .addComponent(btnOrdenar1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbArtistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbArtistasActionPerformed
              
     // Obtener el nombre del artista seleccionado del combo
    String nombreArtistaSeleccionado = (String) cmbArtistas.getSelectedItem();

    // Filtrar la tabla para mostrar solo las filas relacionadas con el artista seleccionado
    filtrarTablaPorArtista(nombreArtistaSeleccionado);
}

    private void filtrarTablaPorArtista(String nombreArtista) {
    DefaultTableModel modeloTabla = (DefaultTableModel) jTableBusqueda.getModel();

    // Limpiar las filas ocultas (restaurar la altura de las filas)
    for (int fila = 0; fila < modeloTabla.getRowCount(); fila++) {
        jTableBusqueda.setRowHeight(fila, jTableBusqueda.getRowHeight());
    }

    // Si el nombre del artista seleccionado es null, no se aplica ningún filtro
    if (nombreArtista != null) {
        // Obtener el índice de la columna "Artista" en el modelo de tabla
        int columnaArtista = modeloTabla.findColumn("Artista");

        // Iterar sobre las filas y ocultar las que no correspondan al artista seleccionado
        for (int fila = 0; fila < modeloTabla.getRowCount(); fila++) {
            Object valorArtista = modeloTabla.getValueAt(fila, columnaArtista);

            if (valorArtista instanceof String) {
                // Comparar el nombre del artista en la fila con el artista seleccionado
                String nombreArtistaFila = (String) valorArtista;

                if (!nombreArtistaFila.equals(nombreArtista)) {
                    // Ocultar la fila si el artista no coincide
                    jTableBusqueda.setRowHeight(fila, 0);
                }
            }
        }
    }
    
    }//GEN-LAST:event_cmbArtistasActionPerformed

    private void cmbGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGeneroActionPerformed
        // Obtener el género seleccionado del combo
    String generoSeleccionado = (String) cmbGenero.getSelectedItem();

    // Filtrar la tabla para mostrar solo las filas relacionadas con el género seleccionado
    filtrarTablaPorGenero(generoSeleccionado);
}

    private void filtrarTablaPorGenero(String genero) {
    DefaultTableModel modeloTabla = (DefaultTableModel) jTableBusqueda.getModel();

    // Limpiar las filas ocultas (restaurar la altura de las filas)
    for (int fila = 0; fila < modeloTabla.getRowCount(); fila++) {
        jTableBusqueda.setRowHeight(fila, jTableBusqueda.getRowHeight());
    }

    // Si el género seleccionado es null, no se aplica ningún filtro
    if (genero != null) {
        // Obtener el índice de la columna "Genero" en el modelo de tabla
        int columnaGenero = modeloTabla.findColumn("Genero");

        // Iterar sobre las filas y ocultar las que no correspondan al género seleccionado
        for (int fila = 0; fila < modeloTabla.getRowCount(); fila++) {
            Object valorGenero = modeloTabla.getValueAt(fila, columnaGenero);

            if (valorGenero instanceof String) {
                // Comparar el género en la fila con el género seleccionado
                String generoFila = (String) valorGenero;

                if (!generoFila.equals(genero)) {
                    // Ocultar la fila si el género no coincide
                    jTableBusqueda.setRowHeight(fila, 0);
                }
            }
        }
    }
    }//GEN-LAST:event_cmbGeneroActionPerformed

    private void cmbAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAlbumActionPerformed
     // Obtener el género seleccionado del combo
    String generoSeleccionado = (String) cmbGenero.getSelectedItem();

    // Filtrar la tabla para mostrar solo las filas relacionadas con el género seleccionado
    filtrarTablaPorGenero(generoSeleccionado);
}

private void filtrarTablaPorAlbum(String nombreAlbum) {
    }//GEN-LAST:event_cmbAlbumActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void btnOrdenar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOrdenar1ActionPerformed

    private void btnOrdenar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOrdenar2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmFiltros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmCancion dialog = new frmCancion((frmPrincipal) new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnOrdenar1;
    private javax.swing.JButton btnOrdenar2;
    private javax.swing.JComboBox<String> cmbAlbum;
    private javax.swing.JComboBox<String> cmbArtistas;
    private javax.swing.JComboBox<String> cmbGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBusqueda;
    private Logica.Utilitario utilitario1;
    // End of variables declaration//GEN-END:variables



}
